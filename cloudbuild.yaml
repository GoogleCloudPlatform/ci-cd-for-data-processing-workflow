# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
steps:
- name: gcr.io/cloud-builders/git
  args: ['clone', 'https://source.developers.google.com/p/$PROJECT_ID/r/$REPO_NAME']
  id: 'check-out-source-code'
- name: gcr.io/cloud-builders/mvn
  args: ['package', '-q']
  dir: '$REPO_NAME/source-code/data-processing-code'
  id: 'build-jar'
- name: gcr.io/cloud-builders/gsutil
  args: ['cp', '*bundled*.jar', 'gs://${_DATAFLOW_JAR_BUCKET}/dataflow_deployment_$BUILD_ID.jar']
  dir: '$REPO_NAME/source-code/data-processing-code/target'
  id: 'deploy-jar'
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: ['test_sql.sh']
  dir: '$REPO_NAME/source-code/tests'
  id: 'test-sql'
- name: apache/airflow:master
  entrypoint: 'bash'
  args: ['build-pipeline/run_tests.sh']
  dir: '$REPO_NAME/source-code/'
  id: 'validate-dags-and-test-plugins'
- name: gcr.io/cloud-builders/gsutil
  args: ['cp', 'support-files/input.txt', 'gs://${_COMPOSER_INPUT_BUCKET_TEST}']
  dir: '$REPO_NAME/source-code/dags'
  id: 'deploy-test-input-file'
- name: gcr.io/cloud-builders/gsutil
  args: ['cp', 'support-files/ref.txt', 'gs://${_COMPOSER_REF_BUCKET}']
  dir: '$REPO_NAME/source-code/dags'
  id: 'deploy-test-ref-file'
- name: gcr.io/cloud-builders/gcloud
  args: ['composer', 'environments', 'storage', 'data', 'import',
         '--environment=${_COMPOSER_ENV_NAME}','--location=${_COMPOSER_REGION}',
         '--source','Variables.json', '--destination', 'config']
  dir: '$REPO_NAME/config'
  id: 'stage-airflow-variables'
- name: gcr.io/cloud-builders/gcloud
  args: ['composer', 'environments', 'run', '${_COMPOSER_ENV_NAME}',
         '--location=${_COMPOSER_REGION}', 'variables', '--',
         '--import', '/home/airflow/gcs/data/config/Variables.json'] 
  dir: '$REPO_NAME'
  id: 'import-airflow-variables'
- name: gcr.io/cloud-builders/gcloud
  args: ['composer', 'environments', 'run', '${_COMPOSER_ENV_NAME}', 
         '--location', '${_COMPOSER_REGION}','variables', '--', 
         '--set', 'dataflow_jar_file_test', 'dataflow_deployment_$BUILD_ID.jar']
  id: 'set-composer-test-jar-ref'
- name: gcr.io/cloud-builders/gsutil
  args: ['rsync','-r', '-d', 'plugins/', '${_COMPOSER_PLUGINS_PREFIX}']
  dir: '$REPO_NAME/source-code/'
  id: 'deploy-custom-plugins'
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: ['deploy_dags.sh']
  env: ['PROJECT_ID=$PROJECT_ID', 'COMPOSER_ENV_NAME=${_COMPOSER_ENV_NAME}', 
        'COMPOSER_REGION=${_COMPOSER_REGION}','COMPOSER_DAG_BUCKET=${_COMPOSER_DAG_BUCKET}']
  dir: '$REPO_NAME/source-code/build-pipeline'
  id: 'trigger-test-pipeline'
- name: gcr.io/cloud-builders/gcloud
  args: ['composer', 'environments', 'run', '${_COMPOSER_ENV_NAME}', '--location', '${_COMPOSER_REGION}', 'trigger_dag', '--', '${_COMPOSER_DAG_NAME_TEST}', '--run_id=$BUILD_ID']
  id: 'trigger-pipeline-execution'
- name: gcr.io/cloud-builders/gsutil
  args: ['cp', 'support-files/input.txt', 'gs://${_COMPOSER_INPUT_BUCKET_PROD}']
  dir: '$REPO_NAME/source-code/dags'
  id: 'deploy-input-file'
- name: gcr.io/cloud-builders/gcloud
  args: ['composer', 'environments', 'run', '${_COMPOSER_ENV_NAME}', '--location', '${_COMPOSER_REGION}', 'trigger_dag', '--', '${_COMPOSER_DAG_NAME_PROD}', '--run_id=$BUILD_ID']
  id: 'trigger-prod-pipeline-execution'
